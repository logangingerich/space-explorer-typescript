/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const EventTypes = {
  MissionCreated: "missionCreated",
  MissionUpdated: "missionUpdated",
  MissionDeleted: "missionDeleted",
} as const;
export type EventTypes = ClosedEnum<typeof EventTypes>;

export type WebhookRegistration = {
  url: string;
  eventTypes: Array<EventTypes>;
};

/** @internal */
export const EventTypes$inboundSchema: z.ZodNativeEnum<typeof EventTypes> = z
  .nativeEnum(EventTypes);

/** @internal */
export const EventTypes$outboundSchema: z.ZodNativeEnum<typeof EventTypes> =
  EventTypes$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EventTypes$ {
  /** @deprecated use `EventTypes$inboundSchema` instead. */
  export const inboundSchema = EventTypes$inboundSchema;
  /** @deprecated use `EventTypes$outboundSchema` instead. */
  export const outboundSchema = EventTypes$outboundSchema;
}

/** @internal */
export const WebhookRegistration$inboundSchema: z.ZodType<
  WebhookRegistration,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
  eventTypes: z.array(EventTypes$inboundSchema),
});

/** @internal */
export type WebhookRegistration$Outbound = {
  url: string;
  eventTypes: Array<string>;
};

/** @internal */
export const WebhookRegistration$outboundSchema: z.ZodType<
  WebhookRegistration$Outbound,
  z.ZodTypeDef,
  WebhookRegistration
> = z.object({
  url: z.string(),
  eventTypes: z.array(EventTypes$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookRegistration$ {
  /** @deprecated use `WebhookRegistration$inboundSchema` instead. */
  export const inboundSchema = WebhookRegistration$inboundSchema;
  /** @deprecated use `WebhookRegistration$outboundSchema` instead. */
  export const outboundSchema = WebhookRegistration$outboundSchema;
  /** @deprecated use `WebhookRegistration$Outbound` instead. */
  export type Outbound = WebhookRegistration$Outbound;
}
