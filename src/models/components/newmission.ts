/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  Astronaut,
  Astronaut$inboundSchema,
  Astronaut$Outbound,
  Astronaut$outboundSchema,
} from "./astronaut.js";

export const NewMissionStatus = {
  Planned: "planned",
  Ongoing: "ongoing",
  Completed: "completed",
} as const;
export type NewMissionStatus = ClosedEnum<typeof NewMissionStatus>;

export type NewMission = {
  name: string;
  status: NewMissionStatus;
  launchDate?: Date | undefined;
  crew?: Array<Astronaut> | undefined;
};

/** @internal */
export const NewMissionStatus$inboundSchema: z.ZodNativeEnum<
  typeof NewMissionStatus
> = z.nativeEnum(NewMissionStatus);

/** @internal */
export const NewMissionStatus$outboundSchema: z.ZodNativeEnum<
  typeof NewMissionStatus
> = NewMissionStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NewMissionStatus$ {
  /** @deprecated use `NewMissionStatus$inboundSchema` instead. */
  export const inboundSchema = NewMissionStatus$inboundSchema;
  /** @deprecated use `NewMissionStatus$outboundSchema` instead. */
  export const outboundSchema = NewMissionStatus$outboundSchema;
}

/** @internal */
export const NewMission$inboundSchema: z.ZodType<
  NewMission,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  status: NewMissionStatus$inboundSchema,
  launchDate: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  crew: z.array(Astronaut$inboundSchema).optional(),
});

/** @internal */
export type NewMission$Outbound = {
  name: string;
  status: string;
  launchDate?: string | undefined;
  crew?: Array<Astronaut$Outbound> | undefined;
};

/** @internal */
export const NewMission$outboundSchema: z.ZodType<
  NewMission$Outbound,
  z.ZodTypeDef,
  NewMission
> = z.object({
  name: z.string(),
  status: NewMissionStatus$outboundSchema,
  launchDate: z.date().transform(v => v.toISOString()).optional(),
  crew: z.array(Astronaut$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NewMission$ {
  /** @deprecated use `NewMission$inboundSchema` instead. */
  export const inboundSchema = NewMission$inboundSchema;
  /** @deprecated use `NewMission$outboundSchema` instead. */
  export const outboundSchema = NewMission$outboundSchema;
  /** @deprecated use `NewMission$Outbound` instead. */
  export type Outbound = NewMission$Outbound;
}
