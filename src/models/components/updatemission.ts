/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  Astronaut,
  Astronaut$inboundSchema,
  Astronaut$Outbound,
  Astronaut$outboundSchema,
} from "./astronaut.js";

export const UpdateMissionStatus = {
  Planned: "planned",
  Ongoing: "ongoing",
  Completed: "completed",
} as const;
export type UpdateMissionStatus = ClosedEnum<typeof UpdateMissionStatus>;

/**
 * Fields to update in a mission
 */
export type UpdateMission = {
  name?: string | undefined;
  status?: UpdateMissionStatus | undefined;
  launchDate?: Date | undefined;
  crew?: Array<Astronaut> | undefined;
};

/** @internal */
export const UpdateMissionStatus$inboundSchema: z.ZodNativeEnum<
  typeof UpdateMissionStatus
> = z.nativeEnum(UpdateMissionStatus);

/** @internal */
export const UpdateMissionStatus$outboundSchema: z.ZodNativeEnum<
  typeof UpdateMissionStatus
> = UpdateMissionStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateMissionStatus$ {
  /** @deprecated use `UpdateMissionStatus$inboundSchema` instead. */
  export const inboundSchema = UpdateMissionStatus$inboundSchema;
  /** @deprecated use `UpdateMissionStatus$outboundSchema` instead. */
  export const outboundSchema = UpdateMissionStatus$outboundSchema;
}

/** @internal */
export const UpdateMission$inboundSchema: z.ZodType<
  UpdateMission,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  status: UpdateMissionStatus$inboundSchema.optional(),
  launchDate: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  crew: z.array(Astronaut$inboundSchema).optional(),
});

/** @internal */
export type UpdateMission$Outbound = {
  name?: string | undefined;
  status?: string | undefined;
  launchDate?: string | undefined;
  crew?: Array<Astronaut$Outbound> | undefined;
};

/** @internal */
export const UpdateMission$outboundSchema: z.ZodType<
  UpdateMission$Outbound,
  z.ZodTypeDef,
  UpdateMission
> = z.object({
  name: z.string().optional(),
  status: UpdateMissionStatus$outboundSchema.optional(),
  launchDate: z.date().transform(v => v.toISOString()).optional(),
  crew: z.array(Astronaut$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateMission$ {
  /** @deprecated use `UpdateMission$inboundSchema` instead. */
  export const inboundSchema = UpdateMission$inboundSchema;
  /** @deprecated use `UpdateMission$outboundSchema` instead. */
  export const outboundSchema = UpdateMission$outboundSchema;
  /** @deprecated use `UpdateMission$Outbound` instead. */
  export type Outbound = UpdateMission$Outbound;
}
