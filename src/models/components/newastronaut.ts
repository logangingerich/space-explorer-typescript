/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type NewAstronaut = {
  name: string;
  role?: string | undefined;
};

/** @internal */
export const NewAstronaut$inboundSchema: z.ZodType<
  NewAstronaut,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  role: z.string().optional(),
});

/** @internal */
export type NewAstronaut$Outbound = {
  name: string;
  role?: string | undefined;
};

/** @internal */
export const NewAstronaut$outboundSchema: z.ZodType<
  NewAstronaut$Outbound,
  z.ZodTypeDef,
  NewAstronaut
> = z.object({
  name: z.string(),
  role: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NewAstronaut$ {
  /** @deprecated use `NewAstronaut$inboundSchema` instead. */
  export const inboundSchema = NewAstronaut$inboundSchema;
  /** @deprecated use `NewAstronaut$outboundSchema` instead. */
  export const outboundSchema = NewAstronaut$outboundSchema;
  /** @deprecated use `NewAstronaut$Outbound` instead. */
  export type Outbound = NewAstronaut$Outbound;
}
