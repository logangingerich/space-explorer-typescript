/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";

/**
 * Filter missions by status
 */
export const Status = {
  Planned: "planned",
  Ongoing: "ongoing",
  Completed: "completed",
} as const;
/**
 * Filter missions by status
 */
export type Status = ClosedEnum<typeof Status>;

export type ListMissionsRequest = {
  /**
   * Filter missions by status
   */
  status?: Status | undefined;
  /**
   * Page number for pagination
   */
  page?: number | undefined;
  /**
   * Number of items per page
   */
  pageSize?: number | undefined;
};

/**
 * A list of missions
 */
export type ListMissionsResponseBody = {
  missions?: Array<components.Mission> | undefined;
  page?: number | undefined;
  pageSize?: number | undefined;
};

export type ListMissionsResponse = {
  headers: { [k: string]: Array<string> };
  result: ListMissionsResponseBody;
};

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z
  .nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> =
  Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
  /** @deprecated use `Status$inboundSchema` instead. */
  export const inboundSchema = Status$inboundSchema;
  /** @deprecated use `Status$outboundSchema` instead. */
  export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const ListMissionsRequest$inboundSchema: z.ZodType<
  ListMissionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: Status$inboundSchema.optional(),
  page: z.number().int().default(1),
  pageSize: z.number().int().default(10),
});

/** @internal */
export type ListMissionsRequest$Outbound = {
  status?: string | undefined;
  page: number;
  pageSize: number;
};

/** @internal */
export const ListMissionsRequest$outboundSchema: z.ZodType<
  ListMissionsRequest$Outbound,
  z.ZodTypeDef,
  ListMissionsRequest
> = z.object({
  status: Status$outboundSchema.optional(),
  page: z.number().int().default(1),
  pageSize: z.number().int().default(10),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListMissionsRequest$ {
  /** @deprecated use `ListMissionsRequest$inboundSchema` instead. */
  export const inboundSchema = ListMissionsRequest$inboundSchema;
  /** @deprecated use `ListMissionsRequest$outboundSchema` instead. */
  export const outboundSchema = ListMissionsRequest$outboundSchema;
  /** @deprecated use `ListMissionsRequest$Outbound` instead. */
  export type Outbound = ListMissionsRequest$Outbound;
}

/** @internal */
export const ListMissionsResponseBody$inboundSchema: z.ZodType<
  ListMissionsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  missions: z.array(components.Mission$inboundSchema).optional(),
  page: z.number().int().optional(),
  pageSize: z.number().int().optional(),
});

/** @internal */
export type ListMissionsResponseBody$Outbound = {
  missions?: Array<components.Mission$Outbound> | undefined;
  page?: number | undefined;
  pageSize?: number | undefined;
};

/** @internal */
export const ListMissionsResponseBody$outboundSchema: z.ZodType<
  ListMissionsResponseBody$Outbound,
  z.ZodTypeDef,
  ListMissionsResponseBody
> = z.object({
  missions: z.array(components.Mission$outboundSchema).optional(),
  page: z.number().int().optional(),
  pageSize: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListMissionsResponseBody$ {
  /** @deprecated use `ListMissionsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListMissionsResponseBody$inboundSchema;
  /** @deprecated use `ListMissionsResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListMissionsResponseBody$outboundSchema;
  /** @deprecated use `ListMissionsResponseBody$Outbound` instead. */
  export type Outbound = ListMissionsResponseBody$Outbound;
}

/** @internal */
export const ListMissionsResponse$inboundSchema: z.ZodType<
  ListMissionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.lazy(() => ListMissionsResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type ListMissionsResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: ListMissionsResponseBody$Outbound;
};

/** @internal */
export const ListMissionsResponse$outboundSchema: z.ZodType<
  ListMissionsResponse$Outbound,
  z.ZodTypeDef,
  ListMissionsResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.lazy(() => ListMissionsResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListMissionsResponse$ {
  /** @deprecated use `ListMissionsResponse$inboundSchema` instead. */
  export const inboundSchema = ListMissionsResponse$inboundSchema;
  /** @deprecated use `ListMissionsResponse$outboundSchema` instead. */
  export const outboundSchema = ListMissionsResponse$outboundSchema;
  /** @deprecated use `ListMissionsResponse$Outbound` instead. */
  export type Outbound = ListMissionsResponse$Outbound;
}
